{"version":3,"sources":["actions.js","reducers/index.js","reducers/data.js","api.js","sagas.js","store.js","Styles.js","Home.js","utilities/Loading.js","RandomSearch.js","Routes.js","App.js","reportWebVitals.js","index.js"],"names":["REQUEST_API_DATA","RECEIVE_API_DATA","requestApiData","type","receiveApiData","data","combineReducers","state","fetchData","a","fetch","response","json","console","log","getApiData","mySaga","action","call","put","takeLatest","sagaMiddleware","createSagaMiddleware","createStore","reducer","applyMiddleware","run","Container","styled","div","Home","person","x","i","artistName","href","artistViewUrl","collectionName","collectionPrice","country","primaryGenreName","releaseDate","trackName","src","previewUrl","controls","Math","random","this","props","results","length","to","className","map","style","textAlign","React","Component","connect","dispatch","bindActionCreators","Loading","id","RandomSearch","useState","loading","setLoading","search","setSearch","songs","setSongs","useEffect","Axios","get","getData","onChange","e","target","value","placeholder","width","height","song","description","Routes","exact","path","store","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5bc67066.chunk.js","sourcesContent":["export const REQUEST_API_DATA = \"REQUEST_API_DATA\";\r\nexport const RECEIVE_API_DATA = \"RECEIVE_API_DATA\";\r\n\r\nexport const requestApiData = () => ({ type: REQUEST_API_DATA });\r\nexport const receiveApiData = (data) => ({ type: RECEIVE_API_DATA, data });\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport data from \"./data\";\r\n\r\nexport default combineReducers({\r\n   data,\r\n});\r\n","import { RECEIVE_API_DATA } from \"../actions\";\r\n\r\nexport default (state = {}, { type, data }) => {\r\n   switch (type) {\r\n      case RECEIVE_API_DATA:\r\n         return data;\r\n      default:\r\n         return state;\r\n   }\r\n};\r\n","export const fetchData = async () => {\r\n   try {\r\n      const response = await fetch(\"https://itunes.apple.com/search?term=jack+johnson&limit=25\");\r\n      const data = await response.json();\r\n      console.log(data);\r\n      return data;\r\n   } catch (e) {\r\n      console.log(e);\r\n   }\r\n};\r\n","import { call, put, takeLatest } from \"redux-saga/effects\";\r\n\r\nimport { REQUEST_API_DATA, receiveApiData } from \"./actions\";\r\nimport { fetchData } from \"./api\";\r\n\r\n// worker Saga: will be fired on USER_FETCH_REQUESTED actions\r\nfunction* getApiData(action) {\r\n   try {\r\n      // do api call\r\n      const data = yield call(fetchData);\r\n      yield put(receiveApiData(data));\r\n   } catch (e) {\r\n      console.log(e);\r\n   }\r\n}\r\n\r\n/*\r\n  Alternatively you may use takeLatest.\r\n  Does not allow concurrent fetches of user. If \"USER_FETCH_REQUESTED\" gets\r\n  dispatched while a fetch is already pending, that pending fetch is cancelled\r\n  and only the latest one will be run.\r\n*/\r\nexport default function* mySaga() {\r\n   yield takeLatest(REQUEST_API_DATA, getApiData);\r\n}\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\nimport reducer from \"./reducers\";\r\nimport mySaga from \"./sagas\";\r\n\r\n// create the saga middleware\r\nconst sagaMiddleware = createSagaMiddleware();\r\n// mount it on the Store\r\nexport default createStore(reducer, applyMiddleware(sagaMiddleware));\r\n\r\n// then run the saga\r\nsagaMiddleware.run(mySaga);\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n   border: 1px solid blue;\r\n   border-radius: 20px;\r\n   margin-bottom: 1rem;\r\n   color: #fff;\r\n`;\r\n","import React from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport ReactAudioPlayer from \"react-audio-player\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { requestApiData } from \"./actions\";\r\n\r\nimport { Container } from \"./Styles.js\";\r\n\r\nclass Home extends React.Component {\r\n   componentDidMount() {\r\n      this.props.requestApiData();\r\n   }\r\n\r\n   person = (x, i) => (\r\n      <>\r\n         <Container key={Math.random()}>\r\n            <h1>\r\n               {x.artistName}\r\n               <span>\r\n                  (<a href={x.artistViewUrl}>About Artist</a>)\r\n               </span>\r\n            </h1>\r\n            <h4>\r\n               <span>Collection Name:</span> {x.collectionName}\r\n            </h4>\r\n            <h4>\r\n               <span>Collection Price:</span> {x.collectionPrice}\r\n            </h4>\r\n            <h4>\r\n               <span>Country:</span> {x.country}\r\n            </h4>\r\n            <h4>\r\n               <span>Genre:</span> {x.primaryGenreName}\r\n            </h4>\r\n            <h4>\r\n               <span>Release Date:</span> {x.releaseDate}\r\n            </h4>\r\n            <h4>\r\n               <span>Track Name:</span> {x.trackName}\r\n            </h4>\r\n            <h4>\r\n               <span>Preview:</span>{\" \"}\r\n            </h4>\r\n            <ReactAudioPlayer src={x.previewUrl} controls />\r\n         </Container>\r\n      </>\r\n   );\r\n\r\n   render() {\r\n      const { results = [] } = this.props.data;\r\n      return results.length ? (\r\n         <div>\r\n            <h2>\r\n               Wanna search by artist name?\r\n               <br />\r\n               <Link to=\"/search\">\r\n                  <button className=\"btn btn-warning\">Go Here</button>\r\n               </Link>\r\n            </h2>\r\n            <div>{results.map(this.person)}</div>\r\n         </div>\r\n      ) : (\r\n         <h1 style={{ textAlign: \"center\" }}>loading...</h1>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ data: state.data });\r\n\r\nconst mapDispatchToProps = (dispatch) => bindActionCreators({ requestApiData }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import React from \"react\";\r\n\r\nimport \"./Loading.css\";\r\n\r\nconst Loading = () => {\r\n   return (\r\n      <div id=\"main_loading\">\r\n         <div className=\"loading\">\r\n            <div className=\"circle\"></div>\r\n            <div className=\"circle\"></div>\r\n            <div className=\"circle\"></div>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Loading;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport ReactAudioPlayer from \"react-audio-player\";\r\nimport { Button } from \"antd\";\r\n\r\nimport Loading from \"./utilities/Loading\";\r\nimport { Container } from \"./Styles\";\r\n\r\nfunction RandomSearch() {\r\n   const [loading, setLoading] = useState(false);\r\n\r\n   const [search, setSearch] = useState(\"\");\r\n\r\n   const [songs, setSongs] = useState([]);\r\n\r\n   console.log(songs);\r\n\r\n   //calling data from rest api\r\n   useEffect(() => {\r\n      const getData = async () => {\r\n         try {\r\n            setLoading(true);\r\n            const response = await Axios.get(\"https://itunes.apple.com/search?term=\" + search);\r\n            setSongs(response.data.results);\r\n            setLoading(false);\r\n         } catch (error) {\r\n            setLoading(false);\r\n         }\r\n      };\r\n      getData();\r\n   }, [search]);\r\n\r\n   return (\r\n      <>\r\n         <div className=\"d-flex justify-content-center my-3\">\r\n            <div className=\"w-50\">\r\n               <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  onChange={(e) => setSearch(e.target.value)}\r\n                  placeholder=\"Search by artist name\"\r\n               />\r\n            </div>\r\n\r\n            <Button style={{ width: \"15%\", height: \"6%\" }}>Search</Button>\r\n         </div>\r\n\r\n         {loading ? (\r\n            <Loading />\r\n         ) : (\r\n            <div>\r\n               {songs.map((song) => (\r\n                  <Container key={Math.random()}>\r\n                     <h1>\r\n                        {song.artistName}\r\n                        <span>\r\n                           (<a href={song.artistViewUrl}>About Artist</a>)\r\n                        </span>\r\n                     </h1>\r\n                     <h4>\r\n                        <span>Collection Name:</span> {song.collectionName}\r\n                     </h4>\r\n                     <h4>\r\n                        <span>Collection Price:</span> {song.collectionPrice}\r\n                     </h4>\r\n                     <h4>\r\n                        <span>Country:</span> {song.country}\r\n                     </h4>\r\n                     <h4>\r\n                        <span>Genre:</span> {song.primaryGenreName}\r\n                     </h4>\r\n                     <h4>\r\n                        <span>Release Date:</span> {song.releaseDate}\r\n                     </h4>\r\n                     <h4>\r\n                        <span>Description:</span> {song.description}\r\n                     </h4>\r\n                     <h4>\r\n                        <span>Preview:</span>{\" \"}\r\n                     </h4>\r\n                     <ReactAudioPlayer src={song.previewUrl} controls />\r\n                  </Container>\r\n               ))}\r\n            </div>\r\n         )}\r\n      </>\r\n   );\r\n}\r\n\r\nexport default RandomSearch;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Home from \"./Home\";\r\nimport RandomSearch from \"./RandomSearch\";\r\n\r\nconst Routes = () => {\r\n   return (\r\n      <>\r\n         <Router>\r\n            <Switch>\r\n               <Route exact path=\"/react-redux-saga-itunes-api\">\r\n                  <Home />\r\n               </Route>\r\n\r\n               <Route path=\"/search\">\r\n                  <RandomSearch />\r\n               </Route>\r\n            </Switch>\r\n         </Router>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default Routes;\r\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\n\nimport \"./App.css\";\n\nimport store from \"./store\";\nimport Routes from \"./Routes\";\n\nexport default () => (\n   <Provider store={store}>\n      <Routes />\n   </Provider>\n);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}